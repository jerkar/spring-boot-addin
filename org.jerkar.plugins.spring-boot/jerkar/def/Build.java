import org.jerkar.api.depmanagement.JkDependencySet;
import org.jerkar.api.depmanagement.JkMavenPublicationInfo;
import org.jerkar.api.depmanagement.JkRepo;
import org.jerkar.api.java.JkJavaVersion;
import org.jerkar.api.java.project.JkJavaProjectMaker;
import org.jerkar.tool.JkInit;
import org.jerkar.tool.builtins.java.JkJavaProjectBuild;

import static org.jerkar.api.depmanagement.JkJavaDepScopes.PROVIDED;


/**
 * Jerkar build class (generated by Jerkar from existing pom).
 * 
 * @formatter:off
 */
class Build extends JkJavaProjectBuild {

    @Override
    protected void setup() {
        project().setVersionedModule("org.jerkar.plugins:springboot", "2.0-SNAPSHOT");
        project().getCompileSpec().setSourceAndTargetVersion(JkJavaVersion.V8);
        project().addDependencies(JkDependencySet.of()
                .and("org.jerkar:core:0.7-SNAPSHOT", PROVIDED));
        project().setMavenPublicationInfo(mavenPublicationInfo());

    }

    protected JkMavenPublicationInfo mavenPublicationInfo() {
        return JkMavenPublicationInfo
                .of("Jerkar Add-in for Spring Boot", "A Jerkar add-in for Spring boot application", "http://jerkar.github.io")
                .withScm("https://github.com/jerkar/spring-boot-addin.git")
                .andApache2License()
                .andGitHubDeveloper("djeang", "djeangdev@yahoo.fr");
    }

    @Override
    protected void postPluginSetup() {
        maker().setDependencyResolver(maker().getDependencyResolver().andRepos(JkRepo.ofLocal().toSet()));
    }

    public static void main(String[] args) {
        JkJavaProjectMaker maker = JkInit.instanceOf(Build.class, args).maker();
        maker.clean();
        maker.makeAllArtifacts();
        maker.getPublishTasks().publishLocal();
    }

}